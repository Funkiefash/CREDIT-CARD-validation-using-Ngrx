{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/card-payment/card-payment.component.ts","./src/app/card-payment/card-payment.component.html","./src/app/services/payment.service.ts","./src/app/store/actions.ts","./src/app/store/credit-card-payment-store.module.ts","./src/app/store/effects.ts","./src/app/store/facade.ts","./src/app/store/index.ts","./src/app/store/reducer.ts","./src/app/store/selectors.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { CardPaymentComponent } from './card-payment/card-payment.component';\n\nconst routes: Routes = [\n  {\n    path: 'app',\n    component: AppComponent,\n  },\n  {\n    path:'payment',\n    component: CardPaymentComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToasterConfig } from 'angular2-toaster';\nimport { Observable } from 'rxjs';\nimport { CreditCardPaymentFacade } from './store/facade';\nimport { CreditCardState } from './models/credit-card.interface';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Fasipe-Test';\n  toasterConfig: ToasterConfig;\n  creditCard$: Observable<CreditCardState>;\n\n  constructor(private router: Router, private creditCardPaymentFacade: CreditCardPaymentFacade) {\n\n    this.toasterConfig = new ToasterConfig({\n      showCloseButton: true,\n      tapToDismiss: true,\n      positionClass: 'toast-top-full-width',\n      timeout: 3000\n    });\n    this.creditCard$ = this.creditCardPaymentFacade.data$;\n  }\n\n  ngOnInit() {\n    this.creditCard$.subscribe(data => {\n    })\n  }\n\n\n  navigate(){\n    this.router.navigate(['/payment']);\n  }\n}\n","<div class=\"card card-small\" (click)=\"navigate()\" tabindex=\"0\"style = \"background-color:green\">\n  <svg\n    class=\"material-icons\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n  </svg>\n\n  <span>Make Card Payment</span>\n</div>\n<div class=\"card card-large\">\n  store:\n\n  {{ creditCard$ | async | json }}\n</div>\n<div class=\"view-container\" style = \"width: 600px; height: 400px; margin: auto; background-color:rgb(145, 146, 146)\">\n \n  \n  <toaster-container [toasterconfig]=\"toasterConfig\"></toaster-container>\n\n  <router-outlet></router-outlet>\n</div>\n<div class=\"box\"> <img src=\"Img/Credit-Card.jpg\" alt=\"Credit Card\"></div>\n  <div ng-view class=\"view-frame\"></div> \n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport * as storeModuleConfiguration from './store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CreditCardPaymentStoreEffects } from './store/effects';\nimport { CardPaymentComponent } from './card-payment/card-payment.component';\nimport { PaymentService } from './services/payment.service';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CreditCardPaymentStoreModule } from './store';\nimport { ToasterModule, ToasterService } from 'angular2-toaster';\nimport { CreditCardPaymentFacade } from './store/facade'\nimport { CommonModule } from '@angular/common';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardPaymentComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    ToasterModule,\n    CommonModule,\n    CreditCardPaymentStoreModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot({}),\n    HttpClientModule,\n    EffectsModule.forRoot(),\n    StoreModule.forFeature(storeModuleConfiguration.moduleFeatureKey, storeModuleConfiguration.moduleReducers),\n    EffectsModule.forFeature([CreditCardPaymentStoreEffects]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production })\n  ],\n  providers: [PaymentService, ToasterService, CreditCardPaymentFacade, CreditCardPaymentStoreEffects],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToasterService } from 'angular2-toaster';\nimport { Subject } from 'rxjs';\nimport { CreditCardPaymentFacade } from '../store/facade';\nimport { currentDate } from '../store/reducer';\nimport { PaymentService } from '../services/payment.service';\n\n@Component({\n  selector: 'app-card-payment',\n  templateUrl: './card-payment.component.html',\n  styleUrls: ['./card-payment.component.scss']\n})\nexport class CardPaymentComponent implements OnInit, OnDestroy {\n  unsubscribe$ = new Subject();\n\n  paymentForm: FormGroup;\n  errorMessage: string;\n  currentDate = new Date();\n  currentMonth = currentDate.getMonth() + 1;\n  currentYear = currentDate.getFullYear();\n\n  constructor(private formBuilder: FormBuilder, private facade: CreditCardPaymentFacade) { }\n\n  ngOnInit() {\n    this.errorMessage = \"Please Fill all fields\";\n    this.buildForm();\n  }\n\n\n  buildForm() {\n    this.paymentForm = this.formBuilder.group({\n      amount: ['', [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      nameOnCard: ['', [Validators.required,Validators.minLength(1),Validators.pattern('^[A-Za-z][A-Za-z -]*$')]],\n      cardNumber: ['', [Validators.required,Validators.minLength(16),Validators.min(1111111111111111),Validators.max(9999999999999999)]],\n      expirationMonth: ['', [Validators.required,Validators.minLength(1),Validators.maxLength(2),Validators.min(this.currentMonth),Validators.max(12)]],\n      expirationYear: ['', [Validators.required,Validators.minLength(4),Validators.maxLength(4),Validators.min(this.currentYear),Validators.max(9999)]],\n      cardCVVNumber: ['', [Validators.required,Validators.minLength(3),Validators.maxLength(3),Validators.min(111),Validators.max(999)]]\n    });\n  }\n\n // convenience getter for easy access to form fields\n get formControls() { return this.paymentForm.controls; }\n\n onSubmit() {\n   this.submitForm();\n  }\n\n  submitForm() {\n  if (this.paymentForm.status === 'VALID') {\n    const expiryDate = new Date(this.paymentForm.get('expirationYear').value, this.paymentForm.get('expirationMonth').value, 1)\n    const paymentFormData = {\n      creditCardNumber: this.paymentForm.get('cardNumber').value.toString(),\n      cardHolder: this.paymentForm.get('nameonCard').value,\n      expirationDate: expiryDate,\n      securityCode: this.paymentForm.get('cardCVVNumber').value,\n      amount: +this.paymentForm.get('amount').value,\n    };\n\n    this.facade.makePayment(paymentFormData);\n   \n  } else {\n    this.errorMessage = \"the Form is Invalid!\";\n  }\n  }\n\n  ngOnDestroy(){\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n}\n","\n<link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n\n<div class=\"container\">\n  <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"paymentForm\" (ngSubmit)=\"onSubmit()\">\n    <fieldset>\n      <legend>Credit Card Payment</legend>\n      <div class=\"form-group\">\n        <label class=\"col-sm-3 control-label\" for=\"card-holder-name\">Amount</label>\n        <div class=\"col-sm-9\">\n          <input class=\"form-control\" type=\"text\" formControlName=\"amount\" [ngClass]=\"{ 'is-invalid': (formControls.amount.dirty || formControls.amount.touched) && formControls.amount.errors }\" placeholder=\"Enter Amount Here...\">\n          <div *ngIf=\"!formControls.amount.valid && (formControls.amount.dirty || formControls.amount.touched)\" class=\"invalid-feedback\">\n              <div *ngIf=\"formControls.amount.errors\" class=\"alert alert-danger\">Invalid Amount.</div>\n          </div>\n          </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-sm-3 control-label\" for=\"card-holder-name\">Name</label>\n        <div class=\"col-sm-9\">\n          <input class=\"form-control\" type=\"text\" formControlName=\"nameOnCard\" placeholder=\"Enter Name Here...\" [ngClass]=\"{ 'is-invalid': (formControls.nameOnCard.dirty || formControls.nameOnCard.touched) && formControls.nameOnCard.errors }\">\n          <div *ngIf=\"!formControls.nameOnCard.valid && (formControls.nameOnCard.dirty || formControls.nameOnCard.touched)\" class=\"invalid-feedback\">\n              <div *ngIf=\"formControls.nameOnCard.errors\" class=\"alert alert-danger\">Invalid Cardholder Name.</div>\n          </div>\n          </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-sm-3 control-label\" for=\"card-number\">Card Number</label>\n        <div class=\"col-sm-9\">\n          <input class=\"form-control\" type=\"number\" formControlName=\"cardNumber\" placeholder=\"Enter Card Number Here...\" [ngClass]=\"{ 'is-invalid': formControls.cardNumber.errors  && (formControls.cardNumber.dirty || formControls.cardNumber.touched)}\">\n          <div *ngIf=\"!formControls.cardNumber.valid && (formControls.cardNumber.dirty || formControls.cardNumber.touched)\" class=\"invalid-feedback\">\n              <div *ngIf=\"formControls.cardNumber.errors\" class=\"alert alert-danger\">Invalid Card Number.</div>\n          </div>\n          </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-sm-3 control-label\" for=\"expiry-month\">Expiration Date</label>\n        <div class=\"col-sm-9\">\n          <div class=\"row\">\n            <div class=\"col-xs-3\">\n\n              <select class=\"form-control col-sm-2\" formControlName=\"expirationMonth\" id=\"MM\" [ngClass]=\"{ 'is-invalid': !formControls.expirationMonth.valid && (formControls.expirationMonth.dirty || formControls.expirationMonth.touched) }\">\n                <option>Month</option>\n                <option value=\"01\">Jan (01)</option>\n                <option value=\"02\">Feb (02)</option>\n                <option value=\"03\">Mar (03)</option>\n                <option value=\"04\">Apr (04)</option>\n                <option value=\"05\">May (05)</option>\n                <option value=\"06\">June (06)</option>\n                <option value=\"07\">July (07)</option>\n                <option value=\"08\">Aug (08)</option>\n                <option value=\"09\">Sep (09)</option>\n                <option value=\"10\">Oct (10)</option>\n                <option value=\"11\">Nov (11)</option>\n                <option value=\"12\">Dec (12)</option>\n              </select>\n            </div>\n            <div class=\"col-xs-3\">\n              <select class=\"form-control\" formControlName=\"expirationYear\" id= \"YYYY\" [ngClass]=\"{ 'is-invalid': formControls.expirationYear.errors && (formControls.expirationYear.dirty || formControls.expirationYear.touched) }\" >\n                <option value=\"2019\">2019</option>\n                <option value=\"2020\">2020</option>\n                <option value=\"2021\">2021</option>\n                <option value=\"2022\">2022</option>\n                <option value=\"2023\">2023</option>\n                <option value=\"2024\">2024</option>\n              </select>\n            </div>\n            <div *ngIf=\"( !formControls.expirationMonth.valid && (formControls.expirationMonth.dirty || formControls.expirationMonth.touched) ) || ( !formControls.expirationYear.valid && (formControls.expirationYear.dirty || formControls.expirationYear.touched))\" class=\"invalid-feedback\">\n              <div *ngIf=\"formControls.expirationMonth.errors || formControls.expirationYear.errors\" class=\"alert alert-danger\">Invalid Date of Expiration.</div>\n          </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-sm-3 control-label\" for=\"cvv\">Card CVV</label>\n        <div class=\"col-sm-3\">\n          <input class=\"form-control\" formControlName=\"cardCVVNumber\" placeholder=\"123\" [ngClass]=\"{ 'is-invalid': formControls.cardCVVNumber.errors && (formControls.cardCVVNumber.dirty || formControls.cardCVVNumber.touched) }\">\n          <div *ngIf=\"!formControls.cardCVVNumber.valid && (formControls.cardCVVNumber.dirty || formControls.cardCVVNumber.touched)\" class=\"invalid-feedback\">\n              <div *ngIf=\"formControls.cardCVVNumber.errors\" class=\"alert alert-danger\">Invalid CVV / CVC Number.</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-3 col-sm-9\">\n          <button type=\"submit\" class=\"btn btn btn-success\">Proceed</button>\n        </div>\n      </div>\n    </fieldset>\n      <div *ngIf=\"paymentForm.invalid\" class=\"alert alert-danger\">{{errorMessage}}</div>\n  </form>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpParams,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentService {\n  constructor(private http: HttpClient) {}\n\n  makePayment(paymentData): Observable<any> {\n    const response = {\n      status: 'success',\n      message: 'Payment processed successfully!',\n    };\n    return of(new HttpResponse({ status: 200, body: response }));\n  }\n}\n","\nimport { createAction, props } from '@ngrx/store';\nimport { CreditCardState } from '../models/credit-card.interface';\n\nexport enum CreditCardPaymentActionType {\n  LOAD_CREDIT_CARD = '[CreditCardPayment] Load',\n  LOAD_CREDIT_CARD_SUCCESS = '[CreditCardPayment] Load Success',\n  REFRESH = '[CreditCardPayment] Refresh',\n  PAY_WITH_CARD = '[CreditCardPayment] Pay',\n  PAY_WITH_CARD_SUCCESS = '[CreditCardPayment] Payment Success',\n  PAY_WITH_CARD_ERROR = '[CreditCardPayment] Submit Success'\n}\n\nexport const load = createAction(CreditCardPaymentActionType.LOAD_CREDIT_CARD);\n\nexport const loadSuccess = createAction(\n  CreditCardPaymentActionType.LOAD_CREDIT_CARD_SUCCESS,\n  props<{ creditCardData: CreditCardState }>()\n);\n\nexport const payWithCard = createAction(\n  CreditCardPaymentActionType.PAY_WITH_CARD,\n  props<{ paymentData: CreditCardState }>()\n);\n\nexport const payWithCardSuccess = createAction(\n  CreditCardPaymentActionType.PAY_WITH_CARD_SUCCESS,\n  props<{ creditCardData: CreditCardState }>()\n);\n\nexport const payWithCardError = createAction(\n  CreditCardPaymentActionType.PAY_WITH_CARD_SUCCESS,\n  props<{ error: string }>()\n);\n\n\nexport const refresh = createAction(CreditCardPaymentActionType.REFRESH);\n\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './reducer';\nimport * as storeModuleConfiguration from '.';\nimport { CreditCardPaymentStoreEffects } from './effects';\nimport { EffectsModule } from '@ngrx/effects';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ]\n})\nexport class CreditCardPaymentStoreModule { }\n","import { get } from 'lodash';\nimport { of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  catchError,\n  concatMap,\n  map,\n  switchMap,\n  mergeMap,\n  filter,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { routerNavigatedAction } from '@ngrx/router-store';\n\n// import { CreditCardPaymentAdapter } from 'src/app/core/adapter';\nimport { PaymentService } from '../services/payment.service';\nimport {\n  load,\n  loadSuccess,\n  payWithCard,\n  payWithCardError,\n  payWithCardSuccess,\n} from './actions';\nimport { ToasterService } from 'angular2-toaster';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class CreditCardPaymentStoreEffects {\n  constructor(\n    private dataService: PaymentService,\n    private toasterService: ToasterService,\n    private router: Router,\n    private actions$: Actions\n  ) {}\n\n  proceedPayment$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(payWithCard),\n      concatMap((action) => {\n        return of(action).pipe(withLatestFrom());\n      }),\n      mergeMap(([action]) => {\n        const { paymentData } = action;\n        let returnedAction;\n        return this.dataService.makePayment(paymentData).pipe(\n          map((response) => {\n            if (response.body.status === 'success') {\n              this.toasterService.pop(\n                'success',\n                'SUCCESSFUL',\n                'Your payment was successful'\n              );\n              this.router.navigate([''])\n              returnedAction = payWithCardSuccess({creditCardData: paymentData});\n            } else {\n              this.toasterService.pop(\n                'error',\n                'FAILURE',\n                'Your payment Failed please try again later'\n              );\n              returnedAction = payWithCardError({\n                error: 'Something went wrong please try again',\n              });\n            }\n            return returnedAction;\n          }),\n          catchError((error) => of(payWithCardError({ error })))\n        );\n      })\n    )\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { select, State, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { CreditCardState } from '../models/credit-card.interface';\nimport { load, payWithCard, payWithCardSuccess } from './actions'\nimport { CreditCardQuery } from './selectors';\n\n@Injectable()\nexport class CreditCardPaymentFacade {\n  readonly data$: Observable<CreditCardState>;\n\n  constructor(private store: Store) {\n    this.data$ = this.store.pipe(select(CreditCardQuery.getCreditCardState));\n  }\n\n  getCreditCardData() {\n    this.store.dispatch(load());\n  }\n\n  makePayment(paymentData: CreditCardState) {\n    this.store.dispatch(payWithCard({paymentData}))\n  }\n\n  storeCard(creditCardData) {\n    this.store.dispatch(payWithCardSuccess(creditCardData))\n  }\n}\n","\nimport * as fromCreditCardPaymentStoreActions from './actions';\nimport * as fromCreditCardPaymentStoreEffects from './effects';\nimport * as fromCreditCardPaymentStoreSelectors from './selectors';\nimport * as fromCreditCardPaymentStoreReducer from './reducer';\nimport { CreditCardState } from '../models/credit-card.interface';\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\nimport { InjectionToken } from '@angular/core';\nimport { PaymentState } from './reducer';\nexport {\n    CreditCardPaymentStoreModule\n} from './credit-card-payment-store.module';\n\nexport {\n    fromCreditCardPaymentStoreActions,\n    fromCreditCardPaymentStoreEffects,\n    fromCreditCardPaymentStoreSelectors,\n    fromCreditCardPaymentStoreReducer\n};\n\nexport const moduleFeatureKey = 'payment';\n\nexport interface paymentModuleState {\n  [fromCreditCardPaymentStoreReducer.featureKey]: PaymentState;\n}\n\nexport const initialModuleState: paymentModuleState = {\n  [fromCreditCardPaymentStoreReducer.featureKey]: fromCreditCardPaymentStoreReducer.initialState,\n};\n\nexport interface State {\n  [moduleFeatureKey]: paymentModuleState;\n}\n\nexport const selectFeature = createFeatureSelector<State, paymentModuleState>(moduleFeatureKey);\n\nexport const moduleReducers = new InjectionToken<ActionReducerMap<paymentModuleState>>(moduleFeatureKey, {\n  factory: () => ({\n    [fromCreditCardPaymentStoreReducer.featureKey]: fromCreditCardPaymentStoreReducer.reducer,\n  })\n});\n\n","\nimport { Action, createReducer, on } from '@ngrx/store';\nimport { CreditCardState } from '../models/credit-card.interface';\nimport * as creditCardPaymentActions from './actions';\n// import { creditCardPaymentAdapter, initialState, State } from './state';\n\nexport const featureKey = 'creditCard';\nexport const currentDate = new Date();\n\nexport const initialCreditCardState: CreditCardState = {\n  creditCardNumber: '',\n  cardHolder: '',\n  expirationDate: currentDate,\n  securityCode: '',\n  amount: 0,\n}\n\nexport interface PaymentState {\n  isLoading?: boolean;\n  error?: any;\n  creditCardData?: CreditCardState;\n}\n\nexport const initialState: PaymentState = {\n  isLoading: false,\n  error: null,\n  creditCardData: initialCreditCardState\n};\n\n\nconst featureReducer = createReducer(\n  initialState,\n  on(creditCardPaymentActions.load, state => ({\n    ...state,\n    isLoading: true,\n    error: null\n  })),\n  on(creditCardPaymentActions.loadSuccess, (state, { creditCardData }) => {\n    return  {\n      ...state,\n      creditCardData,\n      isLoading: false,\n      error: null\n    };\n  }),\n  on(creditCardPaymentActions.payWithCardSuccess, (state, { creditCardData }) => ({\n    ...state,\n    creditCardData,\n    isLoading: false,\n    error: null\n  }))\n);\n\nexport function reducer(state: PaymentState, action: Action) {\n  return featureReducer(state, action);\n}\n","\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { moduleFeatureKey } from \".\";\nimport { CreditCardState } from \"../models/credit-card.interface\";\nimport { featureKey, PaymentState } from \"./reducer\";\n\nexport const selectCreditCardState = (state): PaymentState => state[moduleFeatureKey][featureKey];\nconst getPaymentState = createSelector(selectCreditCardState, state => state);\nconst getCreditCardState = createSelector(selectCreditCardState, state => state.creditCardData);\n\nexport const CreditCardQuery = {\n  selectCreditCardState,\n  getCreditCardState,\n  getPaymentState\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}